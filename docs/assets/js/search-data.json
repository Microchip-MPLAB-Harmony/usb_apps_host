{"0": {
    "doc": "License",
    "title": "License",
    "content": "MICROCHIP SOFTWARE IS PROVIDED SOLELY TO ASSIST YOU IN DEVELOPING PRODUCTS AND SYSTEMS THAT USE MICROCHIP PRODUCTS. DOWNLOAD AND/OR USE OF THE SOFTWARE REQUIRES THAT YOU ACCEPT THIS SOFTWARE LICENSE AGREEMENT. IF YOU DO NOT WISH TO ACCEPT THESE TERMS, DO NOT DOWNLOAD OR USE ANY OF THE SOFTWARE. DOWNLOADING OR USING THE SOFTWARE CONTITUTES YOUR ACCEPTANCE OF THIS SOFTWARE LICENSE AGREEMENT. SOFTWARE LICENSE AGREEMENT . This Software License Agreement (\"Agreement\") is an agreement between you (if licensing as an individual) or the entity you represent (if licensing as a business) (\"you\" or \"Licensee\") and Microchip Technology Incorporated, a Delaware corporation, with a place of business at 2355 W. Chandler Blvd., Chandler, AZ 85224-6199, and its affiliates including Microchip Technology Ireland Limited, a company organized under the laws of Ireland, with a principal address at Ground Floor, Block W., East Point Business Park, Dublin, Ireland 3 (collectively, \"Microchip\") for the Microchip MPLAB Harmony Integrated Software Framework and documentation included in the download or otherwise provided by Microchip to Licensee (collectively, the \"Software\"). 1. Use. Subject to the terms of this Agreement, Microchip hereby grants Licensee a limited, revocable, non-exclusive, non-transferable, worldwide license to (a) use the Software, and (b) modify the Software provided in source code form, if any (and use and copy modifications of such Software made by Licensee), provided that in each case (with respect to clauses (a) and (b)) Licensee solely uses the Software with Microchip Products, Licensee Products, or other products agreed to by Microchip in writing. Licensee has no right to (i) substitute third party products for Microchip Products, or (ii) except as expressly provided in Section 2 below, sublicense its rights under this Agreement or otherwise disclose or distribute the Software to any third party. Licensee may make a reasonable number of copies of the Software solely as necessary to exercise its license rights in this Section 1. Licensee will not remove or alter any copyright, trademark, or other proprietary notices contained on or in the Software or any copies. “Microchip Products” means those Microchip devices purchased from Microchip or one of its authorized distributors that are identified in the Software, or if not identified in the Software, then such Microchip devices that are consistent with the purpose of the Software, including but not limited to Microchip 32-bit microcontroller and microprocessor devices and the like. “Licensee Products” means products manufactured by or for Licensee that use or incorporate Microchip Products. 2. Subcontractors. If Licensee wishes for its subcontractor to obtain and use the Software in order to provide design, manufacturing, or other services to Licensee: (a) such subcontractor may (i) download and agree to the terms of this Agreement or (ii) contact Microchip directly for a copy of this Agreement and agree to its terms; or (b) Licensee may sublicense the rights described in Section 1 directly to its subcontractor, provided that (i) such subcontractor agrees in writing to the terms of this Agreement � a copy of which will be provided to Microchip upon request, and (ii) Licensee is liable for such subcontractor's acts and omissions. 3. Third Party Software. (a) Third Party Materials. Licensee agrees to comply with third party license terms applicable to Third Party Materials, if any. Microchip will not be held responsible for Licensee's failure to comply with such terms. Microchip has no obligation to provide support or maintenance for Third Party Materials. \"Third Party Materials\" means the third party software, systems, tools, or specifications (including those of a standards setting organization) referenced in, bundled with, or included in the Software. (b) Open Source Components. Notwithstanding the license grant in Section 1 above, Licensee acknowledges that the Software may include Open Source Components. To the extent required by the licenses covering Open Source Components, the terms of such license apply in lieu of the terms of this Agreement. To the extent the terms of the licenses applicable to Open Source Components prohibit any of the restrictions in this Agreement with respect to such Open Source Components, those restrictions will not apply to the Open Source Component. \"Open Source Components\" means components of the Software that are subject to the terms of an Open Source License. \"Open Source License\" means any software license approved as an open source license by the Open Source Initiative or any substantially similar license, including without limitation any license that, as a condition of distribution of the software licensed under such license, requires that the distributor make the software available in source code format. 4. Licensee Obligations. (a) Restrictions. Except as expressly permitted by this Agreement, Licensee agrees that it will not (i) modify or alter the Software or a Microchip Product; (ii) adapt, translate, decompile, reverse engineer, disassemble the Software provided in object code form, any Microchip Product, or any samples or prototypes provided by Microchip, or create derivative works thereof; or (iii) use the Software with any software or other materials that are subject to licenses or restrictions (e.g., Open Source Licenses) that, when combined with the Software, would require Microchip to disclose, license, distribute, or otherwise make all or any part of such Software available to anyone. (b) Indemnity. Licensee will indemnify (and, at Microchip's election, defend) Microchip from and against any and all claims, costs, damages, expenses (including reasonable attorneys' fees), liabilities, and losses, arising out of or related to: (i) Licensee's modification, disclosure, or distribution of the Software or Third Party Materials; (ii) the use, sale, or distribution of Licensee Products; and (iii) an allegation that Licensee Products or Licensee's modification of the Software infringe third party intellectual property rights. (c) Licensee Products. Licensee understands and agrees that Licensee remains responsible for using its independent analysis, evaluation, and judgment in designing Licensee Products and systems and has full and exclusive responsibility to assure the safety of its products and compliance of its products (and of all Microchip Products used in or for such Licensee Products) with applicable laws and requirements. 5. Confidentiality. (a) Licensee agrees that the Software, underlying inventions, algorithms, know-how, and ideas relating to the Software, and any other non-public business or technical information disclosed by Microchip to Licensee are confidential and proprietary information, including information derived therefrom, belonging to Microchip and its licensors (collectively, \"Confidential Information\"). Licensee will use Confidential Information only to exercise its rights and perform its obligations under this Agreement and will take all reasonable measures to protect the secrecy of and avoid unauthorized access, disclosure, and use of Confidential Information. Such measures include, but are not limited to, the highest degree of care that it uses to protect its own information of a similar nature, but not less than reasonable care. Licensee will only disclose Confidential Information to its employees, subcontractors, consultants, auditors and representatives (collectively \"Representatives\") who have a need to know such information and who have use and confidentiality obligations to Licensee at least as restrictive as those set forth in this Agreement. Licensee is responsible for disclosure or misuse of Confidential Information by its Representatives. Use of Confidential Information for personal gain, for the benefit of a third party or to compete with Microchip, whether directly or indirectly, is a breach of this Agreement. Licensee will notify Microchip in writing of any actual or suspected misuse, misappropriation, or unauthorized disclosure of Confidential Information that comes to Licensee's attention. Confidential Information will not include information that: (i) is or becomes publicly available without breach of this Agreement; (ii) is known or becomes known to Licensee from a source other than Microchip without restriction and without breach of this Agreement or violation of Microchip's rights, as demonstrated by credible evidence in existence at the time of disclosure; (iii) is independently developed by Licensee without use of or reference to the Confidential Information, as demonstrated by credible evidence in existence at the time of independent development; or (iv) is disclosed generally to third parties by Microchip without restrictions similar to those contained in this Agreement. Licensee may disclose Confidential Information to the extent required under law, rule, or regulation (including those of any national securities exchange), by subpoena, civil investigative demand, or similar process, or by a court or administrative agency (each a \"Requirement\"'), provided, that to the extent permitted by applicable law, Licensee will provide prompt notice of such Requirement to Microchip to enable Microchip to seek a protective order or otherwise prevent or restrict such disclosure. (b) Return of Materials. Upon Microchip's request and direction, Licensee will promptly return or destroy the Confidential Information, including any physical information or materials provided to Licensee (together with any copies, excerpts, syntheses, CD ROMS, diskettes, etc.), and, in the case of information derived therefrom, provide written certification that all the Confidential Information has been expunged from any such materials or that all such materials have been destroyed. Further, if Licensee or its affiliates become competitors of Microchip, and Microchip notifies Licensee in writing of its status as a competitor in a given market, then Licensee will promptly engage in the return and certification process described above in this Section 5(b). 6. Ownership and Retention of Rights. All rights, title, and interest (including all intellectual property rights) in and to the Software, including any derivative works of the Software and any incremental modifications to the Software whether made by or for Licensee or Microchip (collectively, \"Microchip Property\"), are and will remain the sole and exclusive property of Microchip, whether such Microchip Property is separate or combined with any other products. Licensee, on behalf of itself and its affiliates, agrees to, and does hereby, assign to Microchip or its designee all right, title and interest (including all intellectual property rights) in and to derivative works of and any incremental modifications to the Software. Licensee will take (and will cause its affiliates, their subcontractors, and all related individuals to take) all action as may be reasonably necessary, proper or advisable to perfect and secure the ownership, licenses, intellectual property and other rights of or to Microchip as set forth in this Agreement. All rights not expressly granted under this Agreement are reserved to Microchip and its licensors and suppliers, and there are no implied rights. Licensee retains all right, title, and interest in and to any technology independently developed by Licensee not derived, directly or indirectly, from the Microchip Property or any other item of tangible property provided to Licensee by Microchip hereunder. 7. Termination. This Agreement will start once accepted by Licensee and continue unless and until terminated as provided in this Agreement. This Agreement automatically terminates immediately if Licensee violates the restrictions set forth in Sections 1, 2 or 4(a). Microchip may terminate this Agreement immediately upon notice if (a) Licensee or its affiliates become competitors of Microchip, or (b) Licensee breaches any other term of this Agreement and does not cure such breach within 30 days after receipt of written notice of such breach from Microchip. Upon termination of this Agreement, (i) the license grants in Sections 1 and 2(b) terminate, and (ii) Licensee will return to Microchip or destroy (and certify the destruction of) all Microchip Property and Confidential Information in its possession or under its control, and all copies thereof. The following sections survive termination of this Agreement: 3, 4, 5, 6, 7, 8, 9, 10, 11 and 12. 8. Dangerous Applications. The Software is not fault-tolerant and is not designed, manufactured, or intended for use in hazardous environments requiring failsafe performance (\"Dangerous Applications\"). Dangerous Applications include the operation of nuclear facilities, aircraft navigation, aircraft communication systems, air traffic control, direct life support machines, weapons systems, or any environment or system in which the failure of the Software could lead directly or indirectly to death, personal injury, or severe physical or environmental damage. Microchip specifically disclaims (a) any express or implied warranty of fitness for use of the Software in Dangerous Applications; and (b) any and all liability for loss, damages and claims resulting from the use of the Software in Dangerous Applications. 9. EU Consumers � Applicable Terms. WHERE LICENSEE IS A CONSUMER LOCATED IN EUROPE, THE FOLLOWING PROVISIONS APPLY INSTEAD OF SECTIONS 9 AND 10 BELOW: Microchip and its licensors will not be liable (a) for any loss suffered by Licensee in connection with the Software where such loss was not reasonably foreseeable when the Software was first downloaded by Licensee, even if such loss was the result of negligence or the failure of Microchip and its licensors to comply with this Agreement; or (b) irrespective of the basis of claim, for any loss of revenue, profit or other business or economic loss suffered. Some Software is made available to Licensee free of charge, and Licensee may at any time download further copies without charge to replace the Software initially downloaded and others may require a fee to be downloaded, or to download any further copies. In all circumstances, to the extent liability may lawfully be limited or excluded, the cumulative liability of Microchip and its licensors will not exceed USD$1,000 (or equivalent sum in the currency of the country in which Licensee resides). However, none of the foregoing limits or excludes any liability for death or personal injury arising from negligence, or for fraud, fraudulent misrepresentation or any other cause that by law cannot be excluded and limited. 10. Warranty Disclaimers. EXCEPT FOR CONSUMERS TO WHOM SECTION 8 APPLIES, THE SOFTWARE IS LICENSED ON AN \"AS-IS\" BASIS. MICROCHIP MAKES NO WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER EXPRESS, IMPLIED, STAUTORY OR OTHERWISE, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR NON-INFRINGEMENT AND ANY WARRANTIES THAT MAY ARISE FROM USAGE OF TRADE OR COURSE OF DEALING. MICROCHIP AND ITS LICENSORS HAVE NO OBLIGATION TO CORRECT ANY DEFECTS IN THE SOFTWARE. TECHNICAL ASSISTANCE, IF PROVIDED, WILL NOT EXPAND THESE WARRANTIES. IF CUSTOMER IS A CONSUMER, THE ABOVE WILL NOT ACT TO EXCLUDE YOUR STATUTORY RIGHTS. 11. Limited Liability. EXCEPT FOR CONSUMERS TO WHOM SECTION 8 APPLIES, IN NO EVENT WILL MICROCHIP BE LIABLE, WHETHER IN CONTRACT, WARRANTY, REPRESENTATION, TORT, STRICT LIABILITY, INDEMNITY, CONTRIBUTION OR OTHERWISE, FOR ANY INDIRECT, SPECIAL, PUNITIVE, EXEMPLARY, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND WHATSOEVER, HOWEVER CAUSED, OR ANY LOSS OF PRODUCTION, COST OF PROCUREMENT OF SUBSTITUTE PRODUCTS OR SERVICES, ANY LOSS OF PROFITS, LOSS OF BUSINESS, LOSS OF USE OR LOSS OF DATA, OR INTERRUPTION OF BUSINESS ARISING OUT OF THIS AGREEMENT, HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS, AND NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY. MICROCHIP'S TOTAL AGGREGATE LIABILITY UNDER THIS AGREEMENT WILL NOT EXCEED USD$1,000. 12. General. (a) This Agreement will be governed by and construed in accordance with the laws of the State of Arizona and the United States, without regard to conflicts of law provisions. The parties hereby irrevocably consent to the exclusive personal jurisdiction and venue of the state and federal courts in Maricopa County, Arizona for any dispute relating to this Agreement. WHERE LICENSEE IS A CONSUMER LOCATED IN EUROPE, this Agreement is subject to the laws of the country in which the Software is downloaded, and, to the extent so mandated by such laws, subject to the jurisdiction of the courts of that country. The parties expressly disclaim the applicability of the United Nations Convention on Contracts for the International Sale of Goods in connection with this Agreement. (b) Unless the parties have a mutually executed agreement relating to the licensing of this Software by Microchip to Licensee (\"Signed Agreement\"), this Agreement constitutes the entire agreement between the parties with respect to the Software, and supersedes and replaces prior or contemporaneous written or verbal agreements or communications between the parties regarding the Software, including any purchase orders. If the parties have a Signed Agreement, this Agreement does not supersede or replace that Signed Agreement. This Agreement will not be modified except by a written agreement signed by an authorized representative of Microchip. If any provision of this Agreement is held by a court of competent jurisdiction to be illegal, invalid, or unenforceable, that provision will be limited or eliminated to the minimum extent necessary so that this Agreement will otherwise remain in full force and effect and enforceable. No waiver of any breach of any provision of this Agreement constitutes a waiver of any prior, concurrent, or subsequent breach of the same or any other provisions of this Agreement, and no waiver will be effective unless made in writing and signed by an authorized representative of the waiving party. (c) Licensee agrees to comply with all import and export laws and restrictions and regulations of the Department of Commerce or other United States or foreign agency or authority. (d) This Agreement will bind and inure to the benefit of each party's permitted successors and assigns. Licensee may not assign this Agreement in whole or in part, whether by law or otherwise, without Microchip's prior written consent. Any merger, consolidation, amalgamation, reorganization, transfer of all or substantially all assets or other change in control or majority ownership (\"Change of Control\") is considered an assignment for the purpose of this Section. Any attempt to assign this Agreement without such consent will be null and void. However, Microchip may assign this Agreement to an affiliate, or to another entity in the event of a Change of Control. (e) Licensee acknowledges its breach of any confidentiality or proprietary rights provision of this Agreement would cause Microchip irreparable damage, for which the award of damages would not be an adequate remedy. Licensee, therefore, agrees if Microchip alleges that Licensee has breached or violated any such provisions then Microchip may seek equitable relief, in addition to all other remedies at law or in equity. (f) Authorized representatives of Microchip shall have the right to reasonably inspect Licensee's premises and to audit Licensee's records and inventory of Licensee Products, whether located on Licensee's premises or elsewhere at any time, announced or unannounced, and in its sole and absolute discretion, in order to ensure Licensee's adherence to the terms of this Agreement. (g) Consistent with 48 C.F.R. �12.212 or 48 C.F.R. �227.7202-1 through 227.7202-4, as applicable, the Software is being licensed to U.S. Government end users (i) only as Commercial Items, and (ii) with only those rights as are granted to all other end users pursuant to the terms and conditions of the applicable Microchip licenses. To the extent the Software (or a portion thereof) qualifies as �technical data' as such term is defined in 48 C.F.R. �252.227-7015(a)(5), then its use, duplication, or disclosure by the U.S. Government is subject to the restrictions set forth in subparagraphs (a) through (e) of the Rights in Technical Data clause at 48 C.F.R. �252.227-7015. Contractor/manufacturer is Microchip Technology Inc., 2355 W. Chandler Blvd., Chandler, AZ 85224-6199. Questions about this Agreement should be sent to: Microchip Technology Inc., 2355 W. Chandler Blvd., Chandler, AZ 85224-6199 USA. ATTN: Marketing. v.3.3.2021 . ",
    "url": "http://localhost:4000/usb_apps_host/mplab_harmony_license.html",
    "relUrl": "/mplab_harmony_license.html"
  },"1": {
    "doc": "CDC MSD Example",
    "title": "CDC MSD Example (cdc_msd)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack to support more than one device type in a USB Host Application. ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html#cdc-msd-example-cdc_msd",
    "relUrl": "/apps/cdc_msd/readme.html#cdc-msd-example-cdc_msd"
  },"2": {
    "doc": "CDC MSD Example",
    "title": "Description",
    "content": "This application creates a USB Host that can recognize and enumerate a CDC USB Device and MSC USB Device . ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html#description",
    "relUrl": "/apps/cdc_msd/readme.html#description"
  },"3": {
    "doc": "CDC MSD Example",
    "title": "Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/cdc_msd. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | pic32mx470_curiosity.X | MPLABX | PIC32MX470F512H | PIC32MX Curiosity Development Board | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_e70_xult.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_freertos.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html#downloading-and-building-the-application",
    "relUrl": "/apps/cdc_msd/readme.html#downloading-and-building-the-application"
  },"4": {
    "doc": "CDC MSD Example",
    "title": " Configuring the Hardware",
    "content": "Curiosity PIC32MZ EF 2.0 Development Board . | Use the USB micro-B port J201 to connect the USB Device to the board. A USB Type-A Female to micro-B male cable will be needed to connect the device (This cable is not included in the kit). | LED1 on the board is controlled by the attached USB CDC device when a CDC device is attached. When a Mass Storage Device is attached, it indicates file write completion. | . Curiosity PIC32MX470 Development Board . | Install a jumper in the J13 header to drive the VBUS line in Host mode. | Connect the USB device to the USB micro-AB connector J12 using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the board is controlled by the attached USB CDC device when a CDC device is attached. When a Mass Storage Device is attached, it indicates file write completion. | . SAMD21 Xplained Pro Board . | Jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID(positions 2 and 3). | Use “TARGET USB” connector on the board to connect the USB Device to the USB Host PC. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED0 on the board is controlled by the attached USB CDC device when a CDC device is attached. When a Mass Storage Device is attached, it indicates file write completion. | . SAME70 Xplained Ultra Board . | Jumper J203 must be shorted between PB08 and LED2(positions 1 and 2). | Use TARGET USB J200 connector on the board to connect the USB Device to the USB Host. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED3 on the board is controlled by the attached USB CDC device when a CDC device is attached. When a Mass Storage Device is attached, it indicates file write completion. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/cdc_msd/readme.html#-configuring-the-hardware"
  },"5": {
    "doc": "CDC MSD Example",
    "title": "Running the Application",
    "content": "This demonstration application creates a USB Host application that enumerates a CDC and a MSD Host. This application combines the functionality of the Host cdc_basic and msd_basic demonstration applications into one application. If a CDC device is connected, the demonstration application behaves like the cdc_basic host application. If a MSD device is connected, the demonstration application behaves like the msd_basic host application. To exercise the CDC Host capabilities, refer to local documentation from usb_apps_host/apps/cdc_basic. The documentation is also available in the github path usb_apps_host/apps/cdc_basic. To exercise the MSD Host capabilities, refer to local documentation from usb_apps_host/apps/msd_basic. The documentation is also available in the github path usb_apps_host/apps/msd_basic. ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html#running-the-application",
    "relUrl": "/apps/cdc_msd/readme.html#running-the-application"
  },"6": {
    "doc": "CDC MSD Example",
    "title": "CDC MSD Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_msd/readme.html",
    "relUrl": "/apps/cdc_msd/readme.html"
  },"7": {
    "doc": "HID Basic Keyboard Example",
    "title": "HID Basic Keyboard Example (hid_basic_keyboard)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host HID Client Driver to support to enumerate and operate a HID keyboard device. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html#hid-basic-keyboard-example-hid_basic_keyboard",
    "relUrl": "/apps/hid_basic_keyboard/readme.html#hid-basic-keyboard-example-hid_basic_keyboard"
  },"8": {
    "doc": "HID Basic Keyboard Example",
    "title": "Description",
    "content": "This application creates a USB Host application that uses the USB Host Layer, HID Client driver and HID Keyboard Usage driver to enumerate a USB keyboard and understand keyboard press release events. The keyboard events are displayed using a terminal emulator on a personal computer. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html#description",
    "relUrl": "/apps/hid_basic_keyboard/readme.html#description"
  },"9": {
    "doc": "HID Basic Keyboard Example",
    "title": " Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/hid_basic_keyboard. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32cm_le00_curiosity_pro.X | MPLABX | PIC32CM5164LE00100 | PIC32CM Lx Curiosity Pro Board | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_a5d2_xult.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d27_som1_ek.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_som1_ek_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_wlsom1_ek1.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a5d27_wlsom1_ek1_freertos.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a7g5_ek.X | MPLABX | SAMA7G54 | SAMA7G5 EK Board | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_e70_xult.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_freertos.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_g55_xpro.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . | sam_g55_xpro_freertos.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html#-downloading-and-building-the-application",
    "relUrl": "/apps/hid_basic_keyboard/readme.html#-downloading-and-building-the-application"
  },"10": {
    "doc": "HID Basic Keyboard Example",
    "title": " Configuring the Hardware",
    "content": "SAMD21 Xplained Pro Board . | A commercially available USB Keyboard is required to run this demonstration application. | Jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID (positions 2 and 3) | Use “TARGET USB” connector on the board to connect the USB Keyboard to the USB Host. A USB Type-A Female to micro-B male cable will be needed to connect the device (This cable is not included in the kit). | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | LED0 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . SAME70 Xplained Ultra Board . | A commercially available USB Keyboard is required to run this demonstration application. | Jumper J203 must be shorted between PB08 and LED2 (positions 1 and 2). | Use “TARGET USB” J200 connector on the board to connect the USB Keyboard to the USB Host. A USB Type-A Female to micro-B male cable will be needed to connect the device (This cable is not included in the kit). | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | LED3 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . SAMG55 Xplained Pro Board . | A commercially available USB Keyboard is required to run this demonstration application. | Chip Erase Jumper must be open. | Use TARGET USB connector on the board to connect the USB keyboard to the USB Host. A USB Type-A Female to micro-B male cable will be needed to connect the device (This cable is not included in the kit). | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | LED0 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . SAM9X60-EK Evaluation Board . | A commercially available USB Keyboard is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the USB Micro-B port (J22) on board to the computer using a micro USB cable (to enable debug com port). | Connect the USB Micro-B Connector (J7) on the board to the computer using a micro USB cable to power up the board. | Connect the USB device to the Type-A connector (J8). | LED D1 indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. Note: Reset push button on SAM9X60 EK is labeled as SW3 . | . SAMA5D2 Xplained Ultra Board . | A commercially available USB Keyboard is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC1 slot on the board. | Reset the board by pressing the Push Button BP3. | . | Connect the EDBG USB Micro-B port J14 on the board to the computer using a micro USB cable. | Connect the USB device to the USB Type-A connector “A5-USB-B” (J13). | The demonstration uses the EDBG USB Micro-B port J14 to transfer demonstration application messages on a PC. | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . Curiosity PIC32MZ EF 2.0 Development Board . | A commercially available USB Keyboard is required to run this demonstration application. | Connect the USB Keyboard to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | The demonstration uses the PKOB4 Serial Interface to transfer messages on a PC. | LED1 indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Keyboard “CapsLock” Button press event. | . SAMA5D27 SOM1 Kit1 . | A commercially available USB Keyboard is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 slot (J12) on the board. | Reset the board by pressing the Push Button PB1. | . | Connect the USB Micro-AB port (J10) on the board to the computer using a micro USB cable. | Connect the USB device to the USB-B Type-C connector (J19) on the board. | The demonstration uses the USB Micro-AB port (J10) to transfer demonstration application messages on a PC. | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . ATSAMA5D27-WLSOM1 Evaluation Kit . | A commercially available USB Keyboard is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 Card Connector (J9) on the board. | Reset the board by pressing the Reset Button (SW2) | . | Connect the USB-A Micro-AB connector (J10) on the board to the computer using a micro USB cable. | Press the “START_SOM” button to activate board start-up. | Connect the USB device to the USB Type-A connector (J11) on the board. | The demonstration uses the Debug UART port (J26) to transfer demonstration application messages on a PC. A USB/Serial converter is required to connect the J26 to a PC (The USB/Serial converter is not included in the kit). | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . SAMA7G5-EK Evaluation Kit . | A commercially available USB Keyboard is required to run this demonstration application. | Powered the board with an external power supply (J1). | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Press the “nSTART” button to activate board start-up. | Connect the USB device to the USB Host Type-A connector (J9) on the board. Alternatively, the USB Device could be connected to the Type-C connector (J8) or micro A/B connector (J7). | The demonstration uses the Debug UART port (J24) to transfer demonstration application messages on a PC. | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on Keyboard “CapsLock” press event. | . Curiosity Pro PIC32CM LE00 Development Board . | Powered the board by connecting an host to “DEBUG USB” (J300) connector. | Connect the USB device to the USB Host “TARGET USB” (J200) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Keyboard “CapsLock” Button press event. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/hid_basic_keyboard/readme.html#-configuring-the-hardware"
  },"11": {
    "doc": "HID Basic Keyboard Example",
    "title": "Running the Application",
    "content": ". | Open the project with appropriate IDE. Compile the project and program the target device. | Connect the serial interface on the board to a PC. On the PC, launch a terminal emulator, such as Tera Term, and select the appropriate COM port and set the serial port settings to 115200-N-1. | If a USB keyboard is not connected to the Embedded USB Host, the terminal emulator window will show the Connect Keyboard prompt. | Attach a USB keyboard to the Host connector of the target hardware. The message, Keyboard Connected, will appear in the terminal emulator window. Refer to the Configuring the Hardware section for any converter requirements. | Begin typing on the keyboard and the appropriate keys should be displayed on the serial terminal. Subsequent press and release of modifier keys (i.e., CAPS LOCK, NUM LOCK, etc.) will result in the appropriate keyboard LEDs to turning ON and OFF. | Disconnecting the keyboard will result in the message, Connect Keyboard. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html#running-the-application",
    "relUrl": "/apps/hid_basic_keyboard/readme.html#running-the-application"
  },"12": {
    "doc": "HID Basic Keyboard Example",
    "title": "HID Basic Keyboard Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_keyboard/readme.html",
    "relUrl": "/apps/hid_basic_keyboard/readme.html"
  },"13": {
    "doc": "HID Basic Mouse USART Example",
    "title": "HID Basic Mouse USART Example (hid_basic_mouse_usart)",
    "content": "This application demonstrates the use of the USB HID Host Client Driver to enumerate and operate a HID USB Mouse device. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html#hid-basic-mouse-usart-example-hid_basic_mouse_usart",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html#hid-basic-mouse-usart-example-hid_basic_mouse_usart"
  },"14": {
    "doc": "HID Basic Mouse USART Example",
    "title": "Description",
    "content": "This application uses the USB Host layer, HID Client driver and HID Mouse Usage driver to enumerate a USB Mouse and detect Mouse button press release events. The Mouse events are displayed using a terminal emulator on a personal computer. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html#description",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html#description"
  },"15": {
    "doc": "HID Basic Mouse USART Example",
    "title": "Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/hid_basic_mouse_usart. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_a5d2_xult.X | MPLABX | ATSAMA5D27C | SAM A5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d27_som1_ek.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_som1_ek_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_wlsom1_ek1.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a5d27_wlsom1_ek1_freertos.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_e70_xult.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_freertos.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_g55_xpro.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html#downloading-and-building-the-application",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html#downloading-and-building-the-application"
  },"16": {
    "doc": "HID Basic Mouse USART Example",
    "title": " Configuring the Hardware",
    "content": "Curiosity PIC32MZ EF 2.0 Development Board . | A commercially available USB Mouse is required to run this demonstration application. | Connect the USB Mouse to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Mouse Button press event. | The demonstration uses the PKOB4 Serial Interface to transfer messages on a PC. | . SAMD21 Xplained Pro Board . | A commercially available USB Mouse is required to run this demonstration application. | Jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID(positions 2 and 3) | Use “TARGET USB” connector on the board to connect the USB Mouse to the USB Host. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED0 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Mouse Button press event. | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | . SAME70 Xplained Ultra Board . | A commercially available USB Mouse is required to run this demonstration application. | Jumper J203 must be shorted between PB08 and LED2(positions 1 and 2). | Use “TARGET USB” J200 connector on the board to connect the USB Mouse to the USB Host. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED3 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Mouse Button press event. | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | . SAMG55 Xplained Pro Board . | A commercially available USB Mouse is required to run this demonstration application. | Chip Erase Jumper must be open. | Use TARGET USB connector on the board to connect the USB Mouse to the USB Host. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED0 indicates a Device Connection. (Attached device has been successfully enumerated and configured). This LED is also toggled on Mouse Button press event. | The demonstration uses the EDBG Serial Interface to transfer demonstration application messages on a PC. | . SAM9X60-EK Evaluation Board . | A commercially available USB Mouse is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the USB Micro-B port (J22) on board to the computer using a micro USB cable (to enable debug com port). | Connect the USB Micro-B Connector (J7) on the board to the computer using a micro USB cable to power up the board. | Connect the USB Mouse to the Type-A connector (J8). | LED D1 indicates a Device Connection Attached device has been successfully enumerated and configured). This LED is also toggled on the Mouse Button press event. | The demonstration uses the USB Micro-B port (J22) to transfer demonstration application messages on a PC. Note: Reset push button on SAM9X60 EK is labeled as SW3 . | . SAMA5D2 Xplained Ultra Board . | A commercially available USB Mouse is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC1 slot on the board. | Reset the board by pressing the Push Button BP3. | . | Connect the EDBG USB Micro-B port J14 on the board to the computer using a micro USB cable. | Connect the USB Mouse to the USB Type-A connector “A5-USB-B” (J13). | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Mouse Button press event. | The demonstration uses the EDBG USB Micro-B port J14 to transfer demonstration application messages on a PC. | . SAMA5D27 SOM1 Kit1 . | A commercially available USB Mouse is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 slot (J12) on the board. | Reset the board by pressing the Push Button PB1. | . | Connect the USB Micro-AB port (J10) on the board to the computer using a micro USB cable. | Connect the USB Mouse to the USB-B Type-C connector (J19) on the board. | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Mouse Button press event. | The demonstration uses the USB Micro-AB port (J10) to transfer demonstration application messages on a PC. | . ATSAMA5D27-WLSOM1 Evaluation Kit . | A commercially available USB Mouse is required to run this demonstration application. | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 Card Connector (J9) on the board. | Reset the board by pressing the Reset Button (SW2) | . | Connect the USB-A Micro-AB connector (J10) on the board to the computer using a micro USB cable. | Press the “START_SOM” button to activate board start-up. | Connect the USB Mouse to the USB Type-A connector (J11) on the board. | RGB LED indicates a Device Connection (Attached device has been successfully enumerated and configured). This LED is also toggled on the Mouse Button press event. | The demonstration uses the Debug UART port (J26) to transfer demonstration application messages on a PC. A USB/Serial converter is required to connect the J26 to a PC (The USB/Serial converter is not included in the kit). | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html#-configuring-the-hardware"
  },"17": {
    "doc": "HID Basic Mouse USART Example",
    "title": "Running the Application",
    "content": ". | Open the project with appropriate IDE. Compile the project and program the target device. | Launch a terminal emulator, such as Tera Term. Select the appropriate COM port and set the serial port settings to 115200-N-1. | If a USB mouse is not connected to the Host connector, the serial terminal emulator window will show the “Connect Mouse” prompt. | Attach a USB mouse to the Host connector of the target hardware. Refer to the Configuring the Hardware section for any converter requirements. The message, “Mouse Connected”, will display in the serial terminal emulator window. | Begin moving the mouse and the appropriate relative coordinate changes for X,Y, and Z axes should be displayed in the serial terminal window. | Click the mouse button to toggle LEDs on the board. Refer to the Configuring the Hardware section for details on the relevant LED. | Disconnecting the mouse will result in the message, “Connect Mouse”, to reappear on the serial console. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html#running-the-application",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html#running-the-application"
  },"18": {
    "doc": "HID Basic Mouse USART Example",
    "title": "HID Basic Mouse USART Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/hid_basic_mouse_usart/readme.html",
    "relUrl": "/apps/hid_basic_mouse_usart/readme.html"
  },"19": {
    "doc": "HUB CDC HID Example",
    "title": "HUB CDC HID Example (hub_cdc_hid)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack to access and manage multiple USB Devices through a Hub. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html#hub-cdc-hid-example-hub_cdc_hid",
    "relUrl": "/apps/hub_cdc_hid/readme.html#hub-cdc-hid-example-hub_cdc_hid"
  },"20": {
    "doc": "HUB CDC HID Example",
    "title": "Description",
    "content": "This application creates a USB Host that can recognize and enumerate a CDC Emulator USB Device and a HID USB Mouse connected via an external Hub. The host will demonstrate the communication from the CDC emulator device and the HID mouse. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html#description",
    "relUrl": "/apps/hub_cdc_hid/readme.html#description"
  },"21": {
    "doc": "HUB CDC HID Example",
    "title": "Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/hub_cdc_hid. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | pic32mz_ef_sk.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html#downloading-and-building-the-application",
    "relUrl": "/apps/hub_cdc_hid/readme.html#downloading-and-building-the-application"
  },"22": {
    "doc": "HUB CDC HID Example",
    "title": " Configuring the Hardware",
    "content": "Curiosity PIC32MZ EF 2.0 Development Board . | Connect the USB device to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 is controlled by the attched USB Mouse. | LED1, LED2, and LED3 are controlled by the attched USB CDC Device. | . PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit . | Connect the USB Hub to the Type A connector J5, which is located on the top side of the starter kit. | LED1 is controlled by the attched USB Mouse. | LED1, LED2, and LED3 are controlled by the attched USB CDC Device. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/hub_cdc_hid/readme.html#-configuring-the-hardware"
  },"23": {
    "doc": "HUB CDC HID Example",
    "title": "Running the Application",
    "content": "This application demonstrates the capability of the USB Host Stack to access and manage multiple USB Devices through a Hub. The demonstration application enumerates a HID mouse and CDC emulator device via an external hub. The host will demonstrate the communication from the CDC emulator device and the HID mouse. Open the project in MPLAB X IDE and select the desired project configuration. | Build the code and program the device. | Connect a hub to the Host connector on the desired board. | Connect a mouse to a spare port on the hub. | Connect the CDC emulator device to another spare port on the hub. Follow the directions for setting up and running the cdc_serial_emulator USB device demonstration. On the personal computer, open a serial terminal and set the serial Baudrate to 9600. | At the prompt, (LED:), enter 1, 2, or 3 to toggle the corresponding LEDs on the starter kit. | Click the mouse Left and Right buttons. This will toggle LED on the demo board. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html#running-the-application",
    "relUrl": "/apps/hub_cdc_hid/readme.html#running-the-application"
  },"24": {
    "doc": "HUB CDC HID Example",
    "title": "HUB CDC HID Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_cdc_hid/readme.html",
    "relUrl": "/apps/hub_cdc_hid/readme.html"
  },"25": {
    "doc": "HUB MSD Example",
    "title": "HUB MSD Example (hub_msd)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack to interact with more than one USB Mass Storage Device through a Hub. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html#hub-msd-example-hub_msd",
    "relUrl": "/apps/hub_msd/readme.html#hub-msd-example-hub_msd"
  },"26": {
    "doc": "HUB MSD Example",
    "title": "Description",
    "content": "This application uses USB Host stack and the Harmony Filesystem Service to copy a file from a source USB pen drive to a target USB pen drive. ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html#description",
    "relUrl": "/apps/hub_msd/readme.html#description"
  },"27": {
    "doc": "HUB MSD Example",
    "title": " Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/hub_msd. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | pic32mx470_curiosity.X | MPLABX | PIC32MX470F512H | PIC32MX Curiosity Development Board | . | pic32mz_ef_sk.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_a5d2_xult.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d27_som1_ek.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_wlsom1_ek1.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a7g5_ek.X | MPLABX | SAMA7G54 | SAMA7G5 EK Board | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html#-downloading-and-building-the-application",
    "relUrl": "/apps/hub_msd/readme.html#-downloading-and-building-the-application"
  },"28": {
    "doc": "HUB MSD Example",
    "title": " Configuring the Hardware",
    "content": "Curiosity PIC32MZ EF 2.0 Development Board . | Connect the USB Hub to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the demonstration board will illuminate to indicate completion of the file transfer. | . Curiosity PIC32MX470 Development Board . | Install a jumper in the J13 header to drive the VBUS line in Host mode. | Connect the USB Hub to the USB micro-AB connector J12 using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the demonstration board will illuminate to indicate completion of the file transfer. | . PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit . | Connect the USB Hub to the Type-A connector J5, which is located on the top side of the starter kit. | LED1 on the demonstration board will illuminate to indicate completion of the file transfer. | . SAMD21 Xplained Pro Board . | Connect the Debug USB port on the board to the computer using a micro USB cable | Jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID(positions 2 and 3) | Use “TARGET USB” connector on the board to connect the USB Device to the the USB Host. A USB micro AB to type A USB Host receptacle converter will be needed to connect the device. | LED0 on the demonstration board will illuminate to indicate completion of the file transfer. | . SAM9X60-EK Evaluation Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the USB Micro-B port J22 on board to the computer using a micro USB cable (to enable debug com port). | Connect the USB Micro-B Connector (J7) on the board to the computer using a micro USB cable to power up the board. | Connect the USB Hub to the Type-A connector (J8). | LED D1 indicates that the file transfer is complete. Note: Reset push button on SAM9X60 EK is labeled as SW3 . | . SAMA5D2 Xplained Ultra Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC1 slot on the board. | Reset the board by pressing the Push Button BP3. | . | Connect the EDBG USB Micro-B port J14 on the board to the computer using a micro USB cable. | Connect the USB Hub to the USB Type-A connector “A5-USB-B” (J13). | RGB LED turning to Green indicates the file write is complete. | . SAMA5D27 SOM1 Kit1 . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 slot (J12) on the board. | Reset the board by pressing the Push Button PB1. | . | Connect the Debug USB port (J10) on the board to the computer using a micro USB cable. | Connect the USB Hub to the USB-B Type-C connector (J19) on the board. | RGB LED turning to Green indicates the file write is complete. | . ATSAMA5D27-WLSOM1 Evaluation Kit . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 Card Connector (J9) on the board. | Reset the board by pressing the Reset Button (SW2) | . | Connect the USB-A MicroAB connector (J10) on the board to the computer using a micro USB cable. | Press the “START_SOM” button to activate board start-up. | Connect the USB Hub to the USB Type-A connector (J11) on the board. | RGB LED turning to Green indicates the file write is complete. | . SAMA7G5-EK Evaluation Kit . | Powered the board with an external power supply (J1). | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Press the “nSTART” button to activate board start-up. | Connect the USB device to the USB Host Type-A connector (J9) on the board. Alternatively, the USB Device could be connected to the Type-C connector (J8) or micro A/B connector (J7). | RGB LED turning to Green indicates the file write is complete. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/hub_msd/readme.html#-configuring-the-hardware"
  },"29": {
    "doc": "HUB MSD Example",
    "title": "Running the Application",
    "content": "This application demonstrates the capability of the USB Host Stack to access and manage multiple USB Devices through a Hub. The demonstration application copies a file from one USB pen drive (i.e.,a USB Flash storage device) to another USB pen drive, where these pen drives are attached to a hub. | Open the project in the MPLAB X IDE or IAR. Refer to Building the Application section for available demo projects. | Build the code and program the device. | Connect a hub to the Host connector on the desired board. | Connect a USB Pen drive containing an arbitrary file named “file.txt” to a spare port on the hub. | Connect another USB pen drive to another spare port on the hub. | The application will copy the file “file.txt” from the drive containing this file to the other drive. The copied file will be renamed as “newfile.txt”. LED on the demonstration board will illuminate to indicate completion of the file transfer. | Disconnect the drives and confirm demonstration success by inserting them into a personal computer and verifying the file transfer completed as expected. | The demonstration application will always be in state where it waits for two pen drives to be connected to the hub and at least one of these pen drives contains a file named “file.txt”. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html#running-the-application",
    "relUrl": "/apps/hub_msd/readme.html#running-the-application"
  },"30": {
    "doc": "HUB MSD Example",
    "title": "HUB MSD Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/hub_msd/readme.html",
    "relUrl": "/apps/hub_msd/readme.html"
  },"31": {
    "doc": "MSD Basic Example",
    "title": "MSD Basic Example (msd_basic)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack to support MSD Host Class Driver . It demonstrates the feature with an application to read / write a file to a USB Flash drive. ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html#msd-basic-example-msd_basic",
    "relUrl": "/apps/msd_basic/readme.html#msd-basic-example-msd_basic"
  },"32": {
    "doc": "MSD Basic Example",
    "title": "Description",
    "content": "This application demonstrates the use of the MSD Host Class Driver to write a file to a USB Flash drive. The application uses the USB Host_layer , MSD class driver and the MPLAB Harmony File System Framework to enumerate a USB Flash drive and to write a file to it. ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html#description",
    "relUrl": "/apps/msd_basic/readme.html#description"
  },"33": {
    "doc": "MSD Basic Example",
    "title": "Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/msd_basic. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32mk_gp_db.X | MPLABX | PIC32MK1024GPE100 | PIC32MK General Purpose (GP) Development Board | . | pic32mk_gp_db_freertos.X | MPLABX | PIC32MK1024GPE100 | PIC32MK General Purpose (GP) Development Board | . | pic32mx470_curiosity.X | MPLABX | PIC32MX470F512H | PIC32MX Curiosity Development Board | . | pic32mx470_curiosity_freertos.X | MPLABX | PIC32MX470F512H | PIC32MX Curiosity Development Board | . | pic32mz_das_sk.X | MPLABX | PIC32MZ2064DAS169 | PIC32MZ Embedded Graphics with Stacked DRAM (DA) Starter Kit | . | pic32mz_ef_curiosity_2.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | pic32mz_ef_sk.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . | pic32mz_ef_sk_freertos.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . | pic32mz_w1_curiosity.X | MPLABX | PIC32MZ1025W104132 | Curiosity PIC32MZ W1 Development Board | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_a5d2_xult.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d27_som1_ek.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_som1_ek_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_wlsom1_ek1.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a5d27_wlsom1_ek1_freertos.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a7g5_ek.X | MPLABX | SAMA7G54 | SAMA7G5 EK Board | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_d21_xpro_iar.IAR | IAR | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_e54_xpro.X | MPLABX | ATSAME54P20A | SAME54 Xplained Pro Board | . | sam_e54_xpro_iar.IAR | IAR | ATSAME54P20A | SAME54 Xplained Pro Board | . | sam_e70_xult.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_freertos.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_iar.IAR | IAR | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_g55_xpro.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . | sam_g55_xpro_freertos.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . | sam_l21_xpro.X | MPLABX | ATSAML21J18B | SAML21 Xplained Pro Board | . | sam_v71_xult_freertos.X | MPLABX | ATSAMV71Q21B | SAMV71 Xplained Ultra board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html#downloading-and-building-the-application",
    "relUrl": "/apps/msd_basic/readme.html#downloading-and-building-the-application"
  },"34": {
    "doc": "MSD Basic Example",
    "title": " Configuring the Hardware",
    "content": "Curiosity PIC32MZ EF 2.0 Development Board . | Connect the USB device to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 indicates the file write is complete. | . Curiosity PIC32MX470 Development Board . | Install a jumper in the J13 header to drive the VBUS line in Host mode. | Connect the USB device to the USB micro-AB connector J12 using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 indicates the file write is complete. | . PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit . | Connect the USB device to the Type-A connector J5, which is located on the top side of the starter kit. | LED1 indicates the file write is complete. | . PIC32MK General Purpose (GP) Development Board . | Connect the USB device to the Type-A connector J5, which is located on the top side of the starter kit. | LED1 indicates the file write is complete. | . PIC32MZ Embedded Graphics with Stacked DRAM (DA) Starter Kit . | Connect the USB device to the Type-A connector J7, which is located on the top side of the starter kit. | LED1 indicates the file write is complete. | . SAM D21 Xplained Pro Board . | The jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID (positions 2 and 3). | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates the file write is complete. | . SAM E54 Xplained Pro Board . | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates the file write is complete. | . SAM E70 Xplained Ultra Board . | Jumper J203 must be shorted between PB08 and LED2 (positions 1 and 2). | Connect the USB device to the “TARGET USB” connector (J200) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED3 indicates the file write is complete. | . SAMG55 Xplained Pro Board . | Chip Erase Jumper must be open. | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates the file write is complete. | . SAML21 Xplained Pro Board . | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates the file write is complete. | . SAMV71 Xplained Ultra Board . | Jumper titled “USB VBUS” must be shorted between PC09 and LED1 (positions 1 and 2) | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 indicates the file write is complete. | . Curiosity PIC32MZ W1 Development Board . | Jumper J205 must be shorted. | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | The LED D204 indicates the file write is complete. | . SAM9X60-EK Evaluation Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the USB Micro-B port J22 on board to the computer using a micro USB cable (to enable debug com port). | Connect the USB Micro-B Connector (J7) on the board to the computer using a micro USB cable to power up the board. | Connect the USB device to the Type-A connector (J8). | LED D1 indicates the file write is complete. | . SAMA5D2 Xplained Ultra Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC1 slot on the board. | Reset the board by pressing the Push Button BP3. | . | Connect the EDBG USB Micro-B port J14 on the board to the computer using a micro USB cable. | Connect the USB device to the USB Type-A connector “A5-USB-B” (J13). | RGB LED turning to Green indicates the file write is complete. | . SAMA5D27 SOM1 Kit1 . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 slot (J12) on the board. | Reset the board by pressing the Push Button PB1. | . | Connect the Debug USB port (J10) on the board to the computer using a micro USB cable. | Connect the USB device to the USB-B Type-C connector (J19) on the board. | RGB LED turning to Green indicates the file write is complete. | . ATSAMA5D27-WLSOM1 Evaluation Kit . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Connect the USB-A MicroAB connector (J10) on the board to the computer using a micro USB cable. | Press the “START_SOM” button to activate board start-up. | Connect the USB device to the USB Type-A connector (J11) on the board. | RGB LED turning to Green indicates the file write is complete. | . SAMA7G5-EK Evaluation Kit . | Powered the board with an external power supply (J1). | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Press the “nSTART” button to activate board start-up. | Connect the USB device to the USB Host Type-A connector (J9) on the board. Alternatively, the USB Device could be connected to the Type-C connector (J8) or micro A/B connector (J7). | RGB LED turning to Green indicates the file write is complete. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/msd_basic/readme.html#-configuring-the-hardware"
  },"35": {
    "doc": "MSD Basic Example",
    "title": "Running the Application",
    "content": "This application demonstrates the use of the MSD Host Class Driver to write a file to USB Flash drive. The application uses the USB Host_layer, MSD class driver and the MPLAB Harmony File System Framework to enumerate a USB Flash drive and to write a file to it. | Open the project with appropriate IDE. Compile the project and program the target device. | With the code running, attach a USB Flash drive to the Host connector on the desired starter kit. | The demonstration application will then create a file named file.txt. It will then write the text “Hello World” to this file, and then close the file. | The LED on the selected hardware will indicate the status of the operation. Refer to the Configuring the Hardware instruction for details. | The USB Flash drive can then be attached to a USB Host personal computer to verify the demonstration application operation. | Steps 3 through 6 can be repeated. | If the USB Flash drive already contains a file with the name file.txt, the demonstration application will append the text “Hello World” to the end of the file contents. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html#running-the-application",
    "relUrl": "/apps/msd_basic/readme.html#running-the-application"
  },"36": {
    "doc": "MSD Basic Example",
    "title": "MSD Basic Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/msd_basic/readme.html",
    "relUrl": "/apps/msd_basic/readme.html"
  },"37": {
    "doc": "Root Hub Dual MSD Example",
    "title": "Root Hub Dual MSD Example (root_hub_dual_msd)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack to support MSD Host Class Driver . It demonstrates the feature with an application to read / write a file to a USB Flash drive. ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html#root-hub-dual-msd-example-root_hub_dual_msd",
    "relUrl": "/apps/root_hub_dual_msd/readme.html#root-hub-dual-msd-example-root_hub_dual_msd"
  },"38": {
    "doc": "Root Hub Dual MSD Example",
    "title": "Description",
    "content": "This application demonstrates the use of the MSD Host Class Driver to write a file to a USB Flash drive. The application uses the USB Host_layer , MSD class driver and the MPLAB Harmony File System Framework to enumerate a USB Flash drive and to write a file to it. ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html#description",
    "relUrl": "/apps/root_hub_dual_msd/readme.html#description"
  },"39": {
    "doc": "Root Hub Dual MSD Example",
    "title": "Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/root_hub_dual_msd. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | sam_a7g5_ek.X | MPLABX | SAMA7G54 | SAMA7G5 EK Board | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html#downloading-and-building-the-application",
    "relUrl": "/apps/root_hub_dual_msd/readme.html#downloading-and-building-the-application"
  },"40": {
    "doc": "Root Hub Dual MSD Example",
    "title": " Configuring the Hardware",
    "content": "SAM9X60-EK Evaluation Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the External Power Jack (J1) to a 5V power supply. | Connect 2 USB devices to the USB Host on the board: . | Stacked type-A USB (J8A) | Stacked type-A USB (J8B) | . | LED D1 on the board indicates the file write is complete. Note: Reset push button on SAM9X60 EK is labeled as SW3 . | . SAMA7G5-EK Evaluation Kit . | Powered the board with an external power supply (J1). | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Press the “nSTART” button to activate board start-up. | Connect 2 USB devices to the USB Host on the board: . | Type-A connector USBC (J9) | Type C Connector USBB (J8) | Type micro A/B connector USBA (J7) | . | RGB LED turning to Green indicates the file write is complete. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/root_hub_dual_msd/readme.html#-configuring-the-hardware"
  },"41": {
    "doc": "Root Hub Dual MSD Example",
    "title": "Running the Application",
    "content": "This application demonstrates the use of the MSD Host Class Driver to write a file to USB Flash drive. The application uses the USB Host_layer, MSD class driver and the MPLAB Harmony File System Framework to enumerate a USB Flash drive and to write a file to it. | Open the project with appropriate IDE. Compile the project and program the target device. | With the code running, attach a USB Flash drive to the Host connector on the desired starter kit containing a non empty file named file.txt | Attach a second empty USB Flash drive to another Host connector on the desired starter kit | The demonstration application will then copy the file.txt from the first USB Flash drive to the second. | The LED on the selected hardware will indicate the status of the operation. | The second USB Flash drive can then be attached to a USB Host personal computer to verify the demonstration application operation. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html#running-the-application",
    "relUrl": "/apps/root_hub_dual_msd/readme.html#running-the-application"
  },"42": {
    "doc": "Root Hub Dual MSD Example",
    "title": "Root Hub Dual MSD Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/root_hub_dual_msd/readme.html",
    "relUrl": "/apps/root_hub_dual_msd/readme.html"
  },"43": {
    "doc": "CDC Basic Example",
    "title": "CDC Basic Example (cdc_basic)",
    "content": "This application demonstrates the ability of the MPLAB Harmony USB Host Stack CDC Client Driver to enumerate and operate a standard CDC USB Device. ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html#cdc-basic-example-cdc_basic",
    "relUrl": "/apps/cdc_basic/readme.html#cdc-basic-example-cdc_basic"
  },"44": {
    "doc": "CDC Basic Example",
    "title": "Description",
    "content": "This application uses the USB Host Layer and CDC Client driver to enumerate a standard CDC USB device. The demonstration host application then operates and uses the functionality of the attached CDC Device. ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html#description",
    "relUrl": "/apps/cdc_basic/readme.html#description"
  },"45": {
    "doc": "CDC Basic Example",
    "title": " Downloading and building the application",
    "content": "To clone or download this application from Github, go to the main page of this repository and then click Clone button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these instructions. Path of the application within the repository is usb_apps_host/apps/cdc_basic. Following table gives the details of project configurations, target device used, hardware and its IDE. Open the project using the respective IDE and build it. | Project Name | IDE | Target Device | Hardware / Configuration | . | pic32cm_le00_curiosity_pro.X | MPLABX | PIC32CM5164LE00100 | PIC32CM Lx Curiosity Pro Board | . | pic32mz_ef_curiosity_2_0.X | MPLABX | PIC32MZ2048EFM144 | Curiosity PIC32MZ EF 2.0 Development Board | . | pic32mz_ef_sk.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . | pic32mz_ef_sk_freertos.X | MPLABX | PIC32MZ2048EFH144 | PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit | . | pic32mx470_curiosity.X | MPLABX | PIC32MX470F512H | PIC32MX Curiosity Development Board | . | sam_9x60_ek.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos.X | MPLABX | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_9x60_ek_freertos_iar.IAR | IAR | SAM9X60 | SAM9X60-EK Evaluation Board | . | sam_a5d2_xult.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d2_xult_freertos_iar.IAR | IAR | ATSAMA5D27C | SAMA5D2 Xplained Ultra Board | . | sam_a5d27_som1_ek.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_som1_ek_freertos.X | MPLABX | ATSAMA5D27C | SAMA5D27 SOM1 Kit1 | . | sam_a5d27_wlsom1_ek1.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a5d27_wlsom1_ek1_freertos.X | MPLABX | ATSAMA5D27C | ATSAMA5D27 WLSOM1 EK1 | . | sam_a7g5_ek.X | MPLABX | SAMA7G54 | SAMA7G5 EK Board | . | sam_d21_xpro.X | MPLABX | ATSAMD21J18A | SAMD21 Xplained Pro Board | . | sam_e54_xpro.X | MPLABX | ATSAME54P20A | SAME54 Xplained Pro Board | . | sam_e70_xult.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_e70_xult_freertos.X | MPLABX | ATSAME70Q21B | SAME70 Xplained Ultra Board | . | sam_g55_xpro.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . | sam_g55_xpro_freertos.X | MPLABX | ATSAMG55J19 | SAMG55 Xplained Pro Board | . | sam_v71_xult_freertos.X | MPLABX | ATSAMV71Q21B | SAMV71 Xplained Ultra board | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html#-downloading-and-building-the-application",
    "relUrl": "/apps/cdc_basic/readme.html#-downloading-and-building-the-application"
  },"46": {
    "doc": "CDC Basic Example",
    "title": " Configuring the Hardware",
    "content": "SAMD21 Xplained Pro Board . | Jumper titled “PA03 SELECT” must be shorted between PA03 and USB_ID (positions 2 and 3) | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 on the board is controlled by the attached USB CDC device. | . SAME54 Xplained Pro Board . | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 on the board is controlled by the attached USB CDC device. | . SAME70 Xplained Ultra Board . | Jumper J203 must be shorted between PB08 and LED2(positions 1 and 2). | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED3 on the board is controlled by the attached USB CDC device. | . SAMV71 Xplained Ultra board . | Jumper titled “USB VBUS” must be shorted between PC09 and LED1 (positions 1 and 2) – Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the board is controlled by the attached USB CDC device. | . SAMG55 Xplained Pro Board . | Chip Erase Jumper must be open. | Connect the USB device to the “TARGET USB” connector using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 on the board is controlled by the attached USB CDC device. | . SAM9X60-EK Evaluation Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC connector J4 on the board. | Reset the board by pressing the Push Button SW3. | . | Jumpers J20, J21, and J13 must be open. | Jumper J2 and J3 must be shorted. | Connect the USB Micro-B port J22 on board to the computer using a micro USB cable (to enable debug com port). | Connect the USB Micro-B Connector (J7) on the board to the computer using a micro USB cable to power up the board. | Connect the USB device to the Type-A connector (J8). | LED D1 on the board is controlled by the attached USB CDC device. Note: Reset push button on SAM9X60 EK is labeled as SW3 . | . SAM A5D2 Xplained Ultra Board . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC1 slot on the board. | Reset the board by pressing the Push Button BP3. | . | Connect the EDBG USB Micro-B port J14 on the board to the computer using a micro USB cable. | Connect the USB device to the USB Type-A connector “A5-USB-B” (J13). | RGB LED on the board is controlled by the attached USB CDC device. | . Curiosity PIC32MX470 Development Board . | Install a jumper in the J13 header to drive the VBUS line in Host mode. | Connect the USB device to the USB micro-AB connector J12 using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the board is controlled by the attached USB CDC device. | . Curiosity PIC32MZ EF 2.0 Development Board . | Connect the USB device to the “TARGET USB” connector (J201) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED1 on the board is controlled by the attached USB CDC device. | . PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit . | Connect the device to the Type A connector J5, which is located on the top side of the starter kit. | LED1 on the board is controlled by the attached USB CDC device. | . SAMA5D27 SOM1 Kit1 . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 slot (J12) on the board. | Reset the board by pressing the Push Button PB1. | . | Connect the Debug USB port (J10) on the board to the computer using a micro USB cable. | Connect the USB device to the USB-B Type-C connector (J19) on the board. | RGB LED on the board is controlled by the attached USB CDC device. | . ATSAMA5D27-WLSOM1 Evaluation Kit . | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SDMMC0 Card Connector (J9) on the board. | Reset the board by pressing the Reset Button (SW2) | . | Connect the USB-A MicroAB connector (J10) on the board to the computer using a micro USB cable. | Press the “START_SOM” button to activate board start-up. | Connect the USB device to the USB Type-A connector (J11) on the board. | RGB LED on the board is controlled by the attached USB CDC device. | . SAMA7G5-EK Evaluation Kit . | Powered the board with an external power supply (J1). | Setup the SD card . | Download harmony MPU bootstrap loader from this location. | Copy the downloaded boot loader binary (boot.bin) and generated application binary (harmony.bin) into the SD card. | Insert the SD card into the SD Card Connector (J4) on the board. | Reset the board by pressing the Reset Button (nRST) | . | Press the “nSTART” button to activate board start-up. | Connect the USB device to the USB Host Type-A connector (J9) on the board. Alternatively, the USB Device could be connected to the Type-C connector (J8) or micro A/B connector (J7). | RGB LED on the board is controlled by the attached USB CDC device. | . Curiosity Pro PIC32CM LE00 Development Board . | Powered the board by connecting an host to “DEBUG USB” (J300) connector. | Connect the USB device to the USB Host “TARGET USB” (J200) using a USB Type-A Female to micro-B male cable (This cable is not included in the kit). | LED0 on the board is controlled by the attached USB CDC device. | . ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html#-configuring-the-hardware",
    "relUrl": "/apps/cdc_basic/readme.html#-configuring-the-hardware"
  },"47": {
    "doc": "CDC Basic Example",
    "title": "Running the Application",
    "content": "This application demonstrates the use of the CDC Host Client Driver to enumerate and operate a CDC USB Device. The application uses the USB Host Layer and CDC Client driver to enumerate a CDC USB device. The demonstration host application then operates and uses the functionality of the attached CDC Device. | Open_the project corresponding to the selected board. Refer to the Building the Application section for details. | Build the code and program the device. | Follow the directions for setting up and running the cdc_serial_emulator USB device demonstration. Start a terminal program on the USB Host personal computer and select the Serial-to-USB Dongle as the communication port. Select the baud rate as 9600, no parity, 1 Stop bit, and no flow control. | Connect the USB Device connector of the CDC USB Device board to the USB Host Target board. Refer to the Configuring the Hardware section for any converter requirements. | A prompt (LED :) will be displayed immediately on the terminal emulation program. | Pressing the 1 key on the USB Host keyboard will cause the LED on the Host USB board to switch on. Refer to the Configuring the Hardware section for details on the relevant LED. Pressing any other key at the prompt message will cause the LED to switch off. | The prompt will again be displayed on the terminal emulation program, and step 7 can be repeated. | Ensure that the CDC serial emulator device is completely powered off before detaching and reattaching to the embedded CDC host. | . In the below setup, the USB Device Board emulates a CDC USB-to-Serial Dongle. The USB Host Board (running the cdc_basic demonstration application) sends the prompt message to the CDC device. The CDC device forwards the prompt to the UART port from where it is transmitted to the PC USB Host through the USB serial interface. A key press on the PC USB Host is transmitted to the CDC device, which in turn presents the key press data to the CDC host. The cdc_basic demonstration then analyzes the key press data and switches on the respective LED. ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html#running-the-application",
    "relUrl": "/apps/cdc_basic/readme.html#running-the-application"
  },"48": {
    "doc": "CDC Basic Example",
    "title": "CDC Basic Example",
    "content": ". ",
    "url": "http://localhost:4000/usb_apps_host/apps/cdc_basic/readme.html",
    "relUrl": "/apps/cdc_basic/readme.html"
  },"49": {
    "doc": "Release notes",
    "title": "Release notes",
    "content": "![Microchip logo](https://raw.githubusercontent.com/wiki/Microchip-MPLAB-Harmony/Microchip-MPLAB-Harmony.github.io/images/microchip_logo.png) ![Harmony logo small](https://raw.githubusercontent.com/wiki/Microchip-MPLAB-Harmony/Microchip-MPLAB-Harmony.github.io/images/microchip_mplab_harmony_logo_small.png) # Microchip MPLAB® Harmony 3 Release Notes ## Harmony 3 USB Host application examples v3.3.0 ### Development kit and demo application support The following table provides the number of USB Host examples available for various development kits. | Development Kits | MPLAB X Applications | IAR Applications | ----------------- | ------------------- | ---------------- | [Curiosity PIC32MX470 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/dm320103) | 5 | 0 | [Curiosity PIC32MZ EF 2.0 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/DM320209) | 7 | 0 | [PIC32MK General Purpose (GP) Development Board](https://www.microchip.com/developmenttools/ProductDetails/dm320106) | 2 | 0 | [PIC32MZ Embedded Graphics with Stacked DRAM (DA) Starter Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/DM320010-C) | 1 | 0 | [PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit](https://www.microchip.com/Developmenttools/ProductDetails/DM320007) | 6 | 0 | [Curiosity PIC32MZ W1 Development Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320104) | 1 | 0 | [SAM D21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/atsamd21-xpro) | 6 | 1 | [SAM E54 Xplained Pro Board](https://www.microchip.com/developmenttools/productdetails/atsame54-xpro) | 2 | 1 | [SAM E70 Xplained Ultra Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320113) | 10 | 1 | [SAMG55 Xplained Pro Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMG55-XPRO) | 7 | 0 | [SAM L21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/PartNO/ATSAML21-XPRO-B) | 1 | 0 | [SAM V71 Xplained Ultra board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT) | 2 | 0 | [SAM9X60-EK Evaluation Board](https://www.microchip.com/developmenttools/ProductDetails/DT100126) | 10 | 7 | [SAM A5D2 Xplained Ultra Board](https://www.microchip.com/Developmenttools/ProductDetails/ATSAMA5D2C-XULT) | 9 | 7 | [SAMA5D27 SOM1 Kit1](https://www.microchip.com/developmenttools/ProductDetails/atsama5d27-som1-ek1) | 9 | 0 | [ATSAMA5D27-WLSOM1 Evaluation Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320117) | 9 | 0 | ### New Features - Added MPLAB® Code Configurator (MCC) configurations for all demonstration configurations. - Added USB Host Root Hub Dual MSD demonstration (root_hub_dual_msd). This application demonstrates connecting multiple USB Devices to a single USB peripheral through ports available on the Root Hub. ### Bug fixes - None ### Known Issues - Harmony USB applications for MPUs do not work with XC32 v4.00. All Harmony USB applications for MPUs should be built with XC32 v3.01. ### Development Tools - [MPLAB® X IDE v6.00](https://www.microchip.com/mplab/mplab-x-ide) - [MPLAB® XC32 C/C++ Compiler v4.01](https://www.microchip.com/mplab/compilers) - [IAR Embedded Workbench® for ARM® v8.5](https://www.iar.com/iar-embedded-workbench/#!?architecture=Arm) - MPLAB® X IDE plug-ins:- MMPLAB® X IDE plug-ins:- MPLAB® Code Configurator (MCC) v5.1.1 or above. ## Harmony 3 USB Host application examples v3.2.0 ### Bug fixes - [MPLAB® Discover portal](https://mplab-discover.microchip.com/) metadata for all demonstration application configurations have been updated. ### New Features and Enhancements - None ### Known Issues - None ### Development Tools - Same as v3.1.0 ## Harmony 3 USB Host application examples v3.1.1 ### Bug fixes - [MPLAB® Discover portal](https://mplab-discover.microchip.com/) metadata for all demonstration application configurations have been updated. ### New Features and Enhancements - None ### Known Issues - None ### Development Tools - Same as v3.1.0 ## Harmony 3 USB Host application examples v3.1.0 ### Development kit and demo application support Following table provides number of USB Host examples available for different development kits. | Development Kits | MPLAB X Applications | IAR Applications | ----------------- | ------------------- | ---------------- | [Curiosity PIC32MX470 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/dm320103) | 5 | 0 | [Curiosity PIC32MZ EF 2.0 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/DM320209) | 7 | 0 | [PIC32MK General Purpose (GP) Development Board](https://www.microchip.com/developmenttools/ProductDetails/dm320106) | 2 | 0 | [PIC32MZ Embedded Graphics with Stacked DRAM (DA) Starter Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/DM320010-C) | 1 | 0 | [PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit](https://www.microchip.com/Developmenttools/ProductDetails/DM320007) | 6 | 0 | [Curiosity PIC32MZ W1 Development Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320104) | 1 | 0 | [SAM D21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/atsamd21-xpro) | 6 | 1 | [SAM E54 Xplained Pro Board](https://www.microchip.com/developmenttools/productdetails/atsame54-xpro) | 2 | 1 | [SAM E70 Xplained Ultra Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320113) | 10 | 1 | [SAMG55 Xplained Pro Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMG55-XPRO) | 7 | 0 | [SAM L21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/PartNO/ATSAML21-XPRO-B) | 1 | 0 | [SAM V71 Xplained Ultra board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT) | 2 | 0 | [SAM9X60-EK Evaluation Board](https://www.microchip.com/developmenttools/ProductDetails/DT100126) | 9 | 7 | [SAM A5D2 Xplained Ultra Board](https://www.microchip.com/Developmenttools/ProductDetails/ATSAMA5D2C-XULT) | 9 | 8 | [SAMA5D27 SOM1 Kit1](https://www.microchip.com/developmenttools/ProductDetails/atsama5d27-som1-ek1) | 9 | 0 | [ATSAMA5D27-WLSOM1 Evaluation Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320117) | 9 | 0 | ### New Features - MPLAB® X IDE USB Host demonstration application configurations have been added for the following development boards. - [Curiosity PIC32MZ EF 2.0 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/DM320209) - [Curiosity PIC32MX470 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/dm320103) - [SAM9X60-EK Evaluation Board](https://www.microchip.com/developmenttools/ProductDetails/DT100126) - [SAMA5D2 Xplained Ultra Board](https://www.microchip.com/Developmenttools/ProductDetails/ATSAMA5D2C-XULT) - [SAMA5D27 SOM1 Kit1](https://www.microchip.com/developmenttools/ProductDetails/atsama5d27-som1-ek1) - [ATSAMA5D27-WLSOM1 Evaluation Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320117) - All demonstration applications are regenerated with MPLAB® Harmony USB v3.8.0 ### Bug fixes - None ### Known Issues - None ### Development Tools - [MPLAB® X IDE v5.50](https://www.microchip.com/mplab/mplab-x-ide) - [MPLAB® XC32 C/C++ Compiler v3.00](https://www.microchip.com/mplab/compilers) - [IAR Embedded Workbench® for ARM® v8.5](https://www.iar.com/iar-embedded-workbench/#!?architecture=Arm) - MPLAB® X IDE plug-ins:- MPLAB® Harmony 3 Launcher v3.6.4 or above ## Harmony 3 USB Host application examples v3.0.1 ### New Features - None ### Bug fixes - Updated MPLAB® Harmony 3 framework relative path for all MPLABX projects. - Removed the compiler switch -Winline for all MPLABX projects. ### Known Issues - None ### Development Tools - [MPLAB® X IDE v5.45](https://www.microchip.com/mplab/mplab-x-ide) - [MPLAB® XC32 C/C++ Compiler v3.00](https://www.microchip.com/mplab/compilers) - [IAR Embedded Workbench® for ARM® v8.5](https://www.iar.com/iar-embedded-workbench/#!?architecture=Arm) - MPLAB® X IDE plug-ins:- MPLAB® Harmony 3 Launcher v3.6.4 or above ## Harmony 3 USB Host application examples v3.0.0 - Applications migrated from USB repository to this new application repository for USB Host examples ### Development kit and demo application support Following table provides number of USB Host examples available for different development kits. | Development Kits | MPLABx applications | IAR applications | ----------------- | ------------------- | ---------------- | [PIC32MK General Purpose (GP) Development Board](https://www.microchip.com/developmenttools/ProductDetails/dm320106) | 2 | 0 | [PIC32MX Curiosity Development Board](https://www.microchip.com/Developmenttools/ProductDetails/dm320103) | 2 | 0 | [PIC32MZ Embedded Graphics with Stacked DRAM (DA) Starter Kit](https://www.microchip.com/DevelopmentTools/ProductDetails/DM320010-C) | 1 | 0 | [Curiosity PIC32MZ EF 2.0 Development Board](https://www.microchip.com/Developmenttools/ProductDetails/DM320209) | 1 | 0 | [PIC32MZ Embedded Connectivity with FPU (EF) Starter Kit](https://www.microchip.com/Developmenttools/ProductDetails/DM320007) | 6 | 0 | [Curiosity PIC32MZ W1 Development Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320104) | 1 | 0 | [SAM9X60-EK Evaluation Board](https://www.microchip.com/developmenttools/ProductDetails/DT100126) | 1 | 8 | [SAM A5D2 Xplained Ultra Board](https://www.microchip.com/Developmenttools/ProductDetails/ATSAMA5D2C-XULT) | 0 | 8 | [SAM D11 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/atsamd11-xpro) | 0 | 0 | [SAM D21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/atsamd21-xpro) | 6 | 1 | [SAM DA1 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/PartNO/ATSAMDA1-XPRO) | 0 | 0 | [SAM E54 Xplained Pro Board](https://www.microchip.com/developmenttools/productdetails/atsame54-xpro) | 2 | 1 | [SAM E70 Xplained Ultra Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/DM320113) | 10 | 1 | [SAMG55 Xplained Pro Board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMG55-XPRO) | 7 | 0 | [SAM L21 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/PartNO/ATSAML21-XPRO-B) | 1 | 0 | [SAM L22 Xplained Pro Board](https://www.microchip.com/developmenttools/ProductDetails/PartNO/ATSAML22-XPRO-B) | 0 | 0 | [SAM V71 Xplained Ultra board](https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT) | 2 | 0 | ### New Features New features added in this release are as follows: - Applications migrated from USB repository to this new application repository for USB Host examples ### Known Issues The current known issues are as follows: - None ### Development Tools - [MPLAB® X IDE v5.45](https://www.microchip.com/mplab/mplab-x-ide) - MPLAB® X IDE plug-ins: - MPLAB® Harmony Configurator (MHC) v3.6.0 - [MPLAB® XC32 C/C++ Compiler v2.50](https://www.microchip.com/mplab/compilers) - [KEIL MDK v5.30 or above](https://www2.keil.com/mdk5) - [IAR Embedded workbench for ARM v8.50 or above](https://www.iar.com/iar-embedded-workbench/#!?architecture=Arm) ",
    "url": "http://localhost:4000/usb_apps_host/release_notes.html",
    "relUrl": "/release_notes.html"
  },"50": {
    "doc": "Harmony 3 USB Host application examples",
    "title": "Harmony 3 USB Host application examples",
    "content": "[![MCHP](https://www.microchip.com/ResourcePackages/Microchip/assets/dist/images/logo.png)](https://www.microchip.com) # Harmony 3 USB Host application examples MPLAB® Harmony 3 is an extension of the MPLAB® ecosystem for creating embedded firmware solutions for Microchip 32-bit SAM and PIC® microcontroller and microprocessor devices. Refer to the following links for more information. - [Microchip 32-bit MCUs](https://www.microchip.com/design-centers/32-bit) - [Microchip 32-bit MPUs](https://www.microchip.com/design-centers/32-bit-mpus) - [Microchip MPLAB X IDE](https://www.microchip.com/mplab/mplab-x-ide) - [Microchip MPLAB® Harmony](https://www.microchip.com/mplab/mplab-harmony) - [Microchip MPLAB® Harmony Pages](https://microchip-mplab-harmony.github.io/) This repository contains the MPLAB® Harmony 3 USB Host application examples. - [Release Notes](/usb_apps_host/release_notes.html) - [MPLAB® Harmony License](/usb_apps_host/mplab_harmony_license.html) To clone or download these applications from Github, go to the [main page of this repository](https://github.com/Microchip-MPLAB-Harmony/usb_apps_host) and then click **Clone** button to clone this repository or download as zip file. This content can also be downloaded using content manager by following these [instructions](https://github.com/Microchip-MPLAB-Harmony/contentmanager/wiki). # Contents Summary | Folder | Description | --- | --- | apps | Contains Harmony 3 USB Host application examples | docs | Contains documentation in html format for offline viewing (to be used only after cloning this repository onto a local machine). Use [github pages](https://microchip-mplab-harmony.github.io/usb_apps_host/) of this repository for viewing it online. | ## Code Examples The following applications are provided to demonstrate the typical or interesting usage models of USB Host capabilities. | Name | Description | ------------------------- | ---------------------- | CDC Basic | This application uses the USB Host Layer and CDC Client driver to enumerate a standard CDC USB device. The demonstration host application then operates and uses the functionality of the attached CDC Device. | CDC MSD | This application creates a USB Host that can recognize and enumerate a CDC USB Device and MSC USB Device. | HID Basic Keyboard | This application creates a USB Host application that uses the USB Host Layer, HID Client driver and HID Keyboard Usage driver to enumerate a USB keyboard and understand keyboard press release events. The keyboard events are displayed using a terminal emulator on a personal computer. | HID Basic Mouse USART | This application uses the USB Host layer, HID Client driver and HID Mouse Usage driver to enumerate a USB Mouse and detect Mouse button press release events. The Mouse events are displayed using a terminal emulator on a personal computer. | HUB CDC HID | This application creates a USB Host that can recognize and enumerate a CDC Emulator USB Device and a HID USB Mouse connected via an external Hub. The host will demonstrate the communication from the CDC emulator device and the HID mouse. | HUB MSD | This application uses USB Host stack and the Harmony Filesystem Service to copy a file from a source USB pen drive to a target USB pen drive. | MSD Basic | This application demonstrates the use of the MSD Host Class Driver to write a file to a USB Flash drive. The application uses the USB Host_layer , MSD class driver and the MPLAB Harmony File System Framework to enumerate a USB Flash drive and to write a file to it. | ROOT HUB DUAL MSD | This application demonstrates the use of the root hub of the host. ____ [![License](https://img.shields.io/badge/license-Harmony%20license-orange.svg)](https://github.com/Microchip-MPLAB-Harmony/usb_apps_host/blob/master/mplab_harmony_license.md) [![Latest release](https://img.shields.io/github/release/Microchip-MPLAB-Harmony/usb_apps_host.svg)](https://github.com/Microchip-MPLAB-Harmony/usb_apps_host/releases/latest) [![Latest release date](https://img.shields.io/github/release-date/Microchip-MPLAB-Harmony/usb_apps_host.svg)](https://github.com/Microchip-MPLAB-Harmony/usb_apps_host/releases/latest) [![Commit activity](https://img.shields.io/github/commit-activity/y/Microchip-MPLAB-Harmony/usb_apps_host.svg)](https://github.com/Microchip-MPLAB-Harmony/usb_apps_host/graphs/commit-activity) [![Contributors](https://img.shields.io/github/contributors-anon/Microchip-MPLAB-Harmony/usb_apps_host.svg)]() ____ [![Follow us on Youtube](https://img.shields.io/badge/Youtube-Follow%20us%20on%20Youtube-red.svg)](https://www.youtube.com/user/MicrochipTechnology) [![Follow us on LinkedIn](https://img.shields.io/badge/LinkedIn-Follow%20us%20on%20LinkedIn-blue.svg)](https://www.linkedin.com/company/microchip-technology) [![Follow us on Facebook](https://img.shields.io/badge/Facebook-Follow%20us%20on%20Facebook-blue.svg)](https://www.facebook.com/microchiptechnology/) [![Follow us on Twitter](https://img.shields.io/twitter/follow/MicrochipTech.svg?style=social)](https://twitter.com/MicrochipTech) [![](https://img.shields.io/github/stars/Microchip-MPLAB-Harmony/usb_apps_host.svg?style=social)]() [![](https://img.shields.io/github/watchers/Microchip-MPLAB-Harmony/usb_apps_host.svg?style=social)]() ",
    "url": "http://localhost:4000/usb_apps_host/",
    "relUrl": "/"
  }
}
